name: Gemini Code Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install @google/generative-ai

      - name: Run Gemini Code Review
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          const { GoogleGenerativeAI } = require("@google/generative-ai");
          const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
          const model = genAI.getGenerativeModel({ model: "gemini-pro" });

          const changedFiles = '${{ steps.changed-files.outputs.all_changed_files }}'.split(' ');
          
          for (const file of changedFiles) {
            const fileContent = require('fs').readFileSync(file, 'utf8');
            const prompt = `당신은 시니어 개발자입니다. 다음 코드를 검토하고 한국어로 코드 리뷰를 제공해주세요:\n\n${fileContent}`;
            
            const result = await model.generateContent(prompt);
            const review = result.response.text();
            
            console.log(`File: ${file}\nReview:\n${review}\n`);
            
            await github.rest.pulls.createReviewComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: review,
              commit_id: context.payload.pull_request.head.sha,
              path: file,
              line: 1
            });
          }
